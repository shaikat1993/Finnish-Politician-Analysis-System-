version: "3.9"

services:
  neo4j:
    image: neo4j:5
    container_name: fpas-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt

    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_default__database=fpas-database
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD}", "MATCH (n) RETURN count(n)"]
      interval: 30s
      timeout: 10s
      retries: 5

  ai_pipeline:
    build:
      context: .
      dockerfile: ai_pipeline/Dockerfile
    container_name: fpas-ai-pipeline
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./ai_pipeline:/app

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: fpas-api
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
      ai_pipeline:
        condition: service_started
    env_file:
      - .env
    environment:
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./api:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  data_collection:
    build:
      context: .
      dockerfile: data_collection/Dockerfile
    container_name: fpas-data-collection
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data_collection:/app

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: fpas-frontend
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    environment:
      - API_URL=http://api:8000/api/v1
    volumes:
      - ./frontend:/app
    ports:
      - "8501:8501"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  scripts:
    build:
      context: .
      dockerfile: scripts/Dockerfile
    container_name: fpas-scripts
    env_file:
      - .env
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    volumes:
      - ./scripts:/app
    entrypoint: ["tail", "-f", "/dev/null"]

volumes:
  neo4j-data: